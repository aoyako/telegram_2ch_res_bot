// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aoyako/telegram_2ch_res_bot/dvach (interfaces: Requester)

// Package mock_dvach is a generated GoMock package.
package mock_dvach

import (
	dvach "github.com/aoyako/telegram_2ch_res_bot/dvach"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRequester is a mock of Requester interface
type MockRequester struct {
	ctrl     *gomock.Controller
	recorder *MockRequesterMockRecorder
}

// MockRequesterMockRecorder is the mock recorder for MockRequester
type MockRequesterMockRecorder struct {
	mock *MockRequester
}

// NewMockRequester creates a new mock instance
func NewMockRequester(ctrl *gomock.Controller) *MockRequester {
	mock := &MockRequester{ctrl: ctrl}
	mock.recorder = &MockRequesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequester) EXPECT() *MockRequesterMockRecorder {
	return m.recorder
}

// GetAllThreads mocks base method
func (m *MockRequester) GetAllThreads(arg0 string) dvach.ListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllThreads", arg0)
	ret0, _ := ret[0].(dvach.ListResponse)
	return ret0
}

// GetAllThreads indicates an expected call of GetAllThreads
func (mr *MockRequesterMockRecorder) GetAllThreads(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllThreads", reflect.TypeOf((*MockRequester)(nil).GetAllThreads), arg0)
}

// GetResourceURL mocks base method
func (m *MockRequester) GetResourceURL(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceURL", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetResourceURL indicates an expected call of GetResourceURL
func (mr *MockRequesterMockRecorder) GetResourceURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceURL", reflect.TypeOf((*MockRequester)(nil).GetResourceURL), arg0)
}

// GetThread mocks base method
func (m *MockRequester) GetThread(arg0, arg1 string) dvach.ThreadData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetThread", arg0, arg1)
	ret0, _ := ret[0].(dvach.ThreadData)
	return ret0
}

// GetThread indicates an expected call of GetThread
func (mr *MockRequesterMockRecorder) GetThread(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetThread", reflect.TypeOf((*MockRequester)(nil).GetThread), arg0, arg1)
}
